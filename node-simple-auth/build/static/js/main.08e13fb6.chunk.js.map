{"version":3,"sources":["Auth.js","Test.js","App.js","serviceWorker.js","index.js"],"names":["signinForm","name","continue","type","required","minLength","signupForm","Auth","props","generateForm","inputData","Fragment","className","header","style","inputs","length","marginBottom","subheader","onSubmit","e","handleSubmit","state","currentInputGroup","inputGroups","onAnimationEnd","handleInputAnimationFinish","animations","inputGroup","map","el","key","htmlFor","value","submitButtom","lastInputGroup","preventDefault","alert","setState","handleAnimationFinish","destination","history","push","main","stopPropagation","signingIn","location","pathname","prevProps","this","onClick","Component","Test","App","activeClassName","to","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.08e13fb6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nconst signinForm = {\r\n    \"header\": \"Sign In\",\r\n    \"subheader\": \"Sign in with your email or phone.\",\r\n    \"submitButtom\": {name: \"Sign in\", continue: \"Continue\"},\r\n    \"inputGroups\": [\r\n        {\r\n            \"inputs\": [\r\n                {name: \"email\", type: \"email\", required: true},\r\n                {name: \"password\", type: \"password\", required: true, minLength: \"6\"},\r\n            ]\r\n        }\r\n    ],\r\n    \"inputs\": [\r\n        {name: \"email\", type: \"email\", required: true},\r\n        {name: \"password\", type: \"password\", required: true, minLength: \"6\"},\r\n    ]\r\n}\r\n\r\nconst signupForm = {\r\n    \"header\": \"Sign Up\",\r\n    \"subheader\": \"Sign up with your email or phone.\",\r\n    \"submitButtom\": {name: \"Sign up\", continue: \"Continue\"},\r\n    \"inputGroups\": [\r\n        {\r\n            \"inputs\": [\r\n                {name: \"username\", minLength: \"5\", type: \"text\", required: true},\r\n                {name: \"email\", type: \"email\", required: true},\r\n            ]\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {name: \"password\", type: \"password\", required: true, minLength: \"6\"},\r\n                {name: \"password-confirmation\", type: \"password\", required: true, minLength: \"6\"},\r\n            ]\r\n        }\r\n    ],\r\n    \"inputs\": [\r\n        {name: \"username\", minLength: \"5\", type: \"text\", required: true},\r\n        {name: \"email\", type: \"email\", required: true},\r\n        {name: \"password\", type: \"password\", required: true, minLength: \"6\"},\r\n    ]\r\n}\r\n\r\n\r\nexport default class Auth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            animations: {\r\n                inputGroup: \"\",\r\n                main: \"auth--animation-enter\"\r\n            },\r\n            destination: \"\", \r\n            currentInputGroup: 0, \r\n            signingIn: this.props.location.pathname === \"/signin\"\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.location.pathname !== this.props.location.pathname) {\r\n            this.setState({\r\n                animations: {\r\n                    inputGroup: \"\",\r\n                    main: \"auth--animation-enter\"\r\n                },\r\n                destination: \"\", \r\n                currentInputGroup: 0, \r\n                signingIn: this.props.location.pathname === \"/signin\"\r\n            });\r\n        }\r\n    }\r\n    \r\n    generateForm = inputData => {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"auth--container--main--header\">\r\n                    {inputData.header}\r\n                </div>\r\n                <div style={ inputData.inputs.length > 2 ? {marginBottom: \"2rem\"} : {}} className=\"auth--container--main--subheader\">\r\n                    {inputData.subheader}\r\n                </div>\r\n                <form onSubmit={(e) => this.handleSubmit(e, this.state.currentInputGroup === inputData.inputGroups.length - 1)}>\r\n                    <div onAnimationEnd={this.handleInputAnimationFinish} className={`auth--container--main--list ${this.state.animations.inputGroup}`}>\r\n                         { \r\n                            inputData.inputGroups[this.state.currentInputGroup].inputs.map(el => (\r\n                                <div key={el.name} className=\"auth--container--main--list--item\">\r\n                                    <label htmlFor={el.name} className=\"auth--container--main--list--item--label\">{el.name}</label>\r\n                                    <input {...el} className=\"auth--container--main--list--item--input\" />\r\n                                </div>\r\n                            ))\r\n                        }                        \r\n                    </div>\r\n                    <input className=\"auth--container--main--submit\" type=\"submit\" value={this.state.currentInputGroup === inputData.inputGroups.length - 1 ? inputData.submitButtom.name : inputData.submitButtom.continue } />\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    handleSubmit = (e, lastInputGroup) => {\r\n        e.preventDefault();\r\n        if (lastInputGroup) {\r\n            alert(\"SUBMITEDD\");  \r\n        }\r\n        else {\r\n            this.setState({...this.state, animations: {...this.state.animations, inputGroup: \"auth--container--main--list--animation-exit\"}});\r\n        }\r\n    };\r\n\r\n    handleAnimationFinish = e => {\r\n        if (this.state.destination !== \"\") { \r\n            this.props.history.push(this.state.destination);\r\n        }\r\n        else {\r\n            this.setState({...this.state, animations: {...this.state.animations, main: \"\"}});\r\n        }\r\n    };\r\n\r\n    handleInputAnimationFinish = e => {\r\n        e.stopPropagation();\r\n\r\n        if (this.state.animations.inputGroup === \"auth--container--main--list--animation-exit\") {\r\n            this.setState({...this.state, currentInputGroup: this.state.currentInputGroup+1, animations: {...this.state.animations, inputGroup: \"auth--container--main--list--animation-enter\"}});\r\n        }\r\n        else {\r\n            this.setState({...this.state, animations: {...this.state.animations, inputGroup: \"\"}});\r\n        }\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"auth\">\r\n                <div onAnimationEnd={this.handleAnimationFinish} className={`auth--container ${this.state.animations.main}`}>\r\n                    <div className=\"auth--container--main\">\r\n                        {\r\n                            this.state.signingIn ?\r\n                                this.generateForm(signinForm)\r\n                            :\r\n                                this.generateForm(signupForm)\r\n                        }\r\n                        <div className=\"auth--container--main--alternative\">\r\n                            { this.state.signingIn ?\r\n                                (<React.Fragment>Don't have an account?  <span onClick={() => { this.setState({...this.state, destination: \"/signup\", animations: {...this.state.animations, main: \"auth--animation-exit\"}});}} className=\"auth--container--main--alternative--link\">Sign Up</span></React.Fragment>) \r\n                                :\r\n                                (<React.Fragment>Already have an account?  <span onClick={() => { this.setState({...this.state, destination: \"/signin\", animations: {...this.state.animations, main: \"auth--animation-exit\"}});}} className=\"auth--container--main--alternative--link\">Sign In</span></React.Fragment>) \r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"auth--container--side\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                OK BOOOOOMERRRR\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport Auth from './Auth';\nimport Test from './Test';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"nav\">\n        <div className=\"nav--logo\">\n          Oxi.Labs  \n        </div>\n        <div className=\"nav--nav\">\n          <NavLink activeClassName=\"nav--nav--item-active\" className=\"nav--nav--item\" to=\"/signin\">\n            Sign in\n          </NavLink>\n          <NavLink activeClassName=\"nav--nav--item-active\" className=\"nav--nav--item\" to=\"/signup\">\n            Sign up\n          </NavLink>\n        </div>\n      </div>\n      <Switch>\n        <Route exact path=\"/signin\" component={Auth} />\n        <Route exact path=\"/test\" component={Test} />\n        <Route exact path=\"/signup\" component={Auth} />\n      </Switch>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'; \nimport './main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}